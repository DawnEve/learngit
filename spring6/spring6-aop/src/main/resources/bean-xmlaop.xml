<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 开启组件扫描 -->
	<context:component-scan base-package="com.mio.spring6.aop.xmlaop"></context:component-scan>
	<!-- 配置aop的5种通知类型 -->
	<aop:config>
		<!-- 配置切面类 -->
		<aop:aspect ref="logAspect">
			<!-- 配置切入点 -->
			<aop:pointcut expression="execution(public int com.mio.spring6.aop.xmlaop.CalculatorImpl.*(..))" 
				id="pointcut"/>
			<!-- 配置5种通知类型 -->
			<!-- 前置通知 -->
			<aop:before method="beforeMethod" pointcut-ref="pointcut" />
			<!-- 后置通知 -->
			<aop:after method="afterMethod" pointcut-ref="pointcut" />
			<!-- 返回通知: returning=返回值的变量名，要和目标函数的参数一致 -->
			<aop:after-returning method="afterReturningMethod" returning="myResult" pointcut-ref="pointcut" />
			<!-- 异常通知: ex=变量名，要和函数参数一致 -->
			<aop:after-throwing method="afterThrowingMethod" throwing="ex" pointcut-ref="pointcut" />
			<!-- 环绕通知 -->
			<aop:around method="aroundMethod" pointcut-ref="pointcut" />
		</aop:aspect>
	</aop:config>
</beans>